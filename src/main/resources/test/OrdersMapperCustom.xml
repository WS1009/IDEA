<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 命名空间，作用就是对SQL分类化管理 ，理解为SQL隔离 注意：使用mapper代理方式开发，
	namespace有特殊重要的作用 namespace等于mapper接口地址
 -->
<mapper namespace="cn.nuaa.testmapper.OrdersMapperCustom">


	<!-- 查询订单关联查询用户 -->
	<select id="findOrdersUser" resultType="cn.nuaa.po.OrdersCustom">
		SELECT orders.*,user.username,user.sex,user.address FROM orders,USER WHERE orders.user_id=user.id
	</select>



	<!-- 订单查询关联用户的resultMap
		将整个查询的结果映射到cn.nuaa.po.Orders中
		resultMap可以实现延迟加载，resultType无法实现延迟加载
		resultMap可以实现将关联查询记过映射到pojo属性中
	-->
	<resultMap type="cn.nuaa.po.Orders" id="OrdersUserResultMap">
		<!-- 配置要映射的订单信息
			id:指定查询列的唯一标示订单信息中的唯一标示，如果多个列组成唯一标示，需配置多个id
			column:订单信息唯一标识列
			property:订单信息唯一标识列所映射到orders中的属性
		 -->
		<id column="id" property="id"/>
		<result column="user_id" property="userId"/>
		<result column="number" property="number"/>
		<result column="createtime" property="createtime"/>
		<result column="note" property="note"/>
		<!-- 配置要映射关联的用户信息
			association:用于映射关联查寻的对象的信息
			property：要将关联查询的用户信息映射到orders中的那个属性这是位置位置准备订单的
		-->
		<association property="user" javaType="cn.nuaa.po.User">
			<!-- 这里的id为user的id，如果写上表示给user的id属性赋值
				column：指定唯一标示用户信息的列
			-->
			<id property="id" column="user_id"/>
			<result property="username" column="username"/>
			<result property="address" column="address"/>
			<result property="sex" column="sex"/>
		</association>
	</resultMap>


	<!-- 查询订单关联查询用户 ，使用resultMap-->
	<select id="findOrdersUserResultMap" resultMap="OrdersUserResultMap">
		SELECT orders.*,user.username,user.sex,user.address FROM orders,USER WHERE orders.user_id=user.id
	</select>




	<!-- 订单及订单明细的resultMap
		extends:使用继承，不用再配置订单信息和用户信息的映射
	 -->
	<resultMap type="cn.nuaa.po.Orders" id="OrdersAndOrderDetailResultMap" extends="OrdersUserResultMap">
		<!-- 订单信息 -->
		<!-- 用户信息 -->
		<!-- 订单明细信息
			一个订单关联查询出了多条明细，要使用collection进行映射
			collection:对关联查询到的多条记录映射到集合对象中
			property:对关联查询到的多头条记录映射到cn.nuaa.po.Orders中的哪个属性
			ofType:指定映射list集合属性中pojo的类型
		-->
		<collection property="orderdetails" ofType="cn.nuaa.po.Orderdetail">
			<!--
				id:订单明细的唯一标示
				property:要将订单明细的唯一标示映射到cn.nuaa.po.Orderdetail的那个属性
			-->
			<id property="id" column="orderdetail_id"/>
			<result property="itemsId" column="items_id"/>
			<result property="itemsNum" column="items_num"/>
			<result property="orderId" column="order_id"/>
		</collection>
	</resultMap>


	<!-- 查询订单关联查询用户 ，使用resultMap-->
	<select id="findOrdersAndOrderDetailResultMap" resultMap="OrdersAndOrderDetailResultMap">
		SELECT orders.*,user.username,user.sex,user.address,
			orderdetail.id orderdetail_id,
			orderdetail.items_num,
			orderdetail.items_id,
			orderdetail.order_id
 		FROM orders,USER,orderdetail 
 		WHERE orders.user_id=user.id AND orderdetail.order_id=orders.id
		
	</select>



	<!--查询用户及购买的商品-->
	<resultMap type="cn.nuaa.po.User" id="UserAndItemsResultMap">
		<!-- 用户信息 -->
		<id column="user_id" property="id"/>
		<result column="username" property="username"/>
		<result column="sex" property="sex"/>
		<result column="address" property="address"/>
		<!-- 订单信息
			一个用户对应多个订单，使用collection映射
			因为订单中套的有订单明细，不能使用继承
		-->
		<collection property="ordersList" ofType="cn.nuaa.po.Orders">
			<id column="id" property="id"/>
			<result column="user_id" property="userId"/>
			<result property="number" column="number"/>
			<result column="createtime" property="createtime"/>
			<result column="note" property="note"/>
			<!-- 订单明细
				一个订单包括多个明细
			-->
			<collection property="orderdetails" ofType="cn.nuaa.po.Orderdetail">
				<id property="id" column="orderdetail_id"/>
				<result property="itemsId" column="items_id"/>
				<result property="itemsNum" column="items_num"/>
				<result property="orderId" column="order_id"/>
				<!-- 商品信息
					一个订单明细对应一个商品
				 -->
				<association property="items" javaType="cn.nuaa.po.Items">
					<id column="items_id" property="id"/>
					<result column="items_name" property="name"/>
					<result column="items_detail" property="detail"/>
					<result column="items_price" property="price"/>
				</association>
			</collection>

		</collection>
	</resultMap>


	<!-- 查询订单关联查询用户及购买的商品信息 ，使用resultMap-->
	<select id="findUserAndItemsResultMap" resultMap="UserAndItemsResultMap">
		SELECT orders.*,user.username,user.sex,user.address,
			orderdetail.id orderdetail_id,
			orderdetail.items_num,
			orderdetail.items_id,
			orderdetail.order_id,
			items.name items_name,
			items.price items_price,
			items.detail items_detail
		FROM orders,USER,orderdetail,items 
		WHERE orders.user_id=user.id AND orderdetail.order_id=orders.id AND items.id=orderdetail.items_id
		
	</select>



	<!-- 查询订单关联查询用户，用户信息需要延迟加载 -->
	<resultMap id="OrdersUserLazyLoadingResultMap" type="cn.nuaa.po.Orders">
		<!-- 对订单信息进行映射配置 -->
		<id column="id" property="id"/>
		<result column="user_id" property="userId"/>
		<result column="number" property="number"/>
		<result column="createtime" property="createtime"/>
		<result column="note" property="note"/>
		<!-- 实现对用户信息的延迟加载 -->
		<!-- 配置要映射关联的用户信息 
			association:用于映射关联查寻的对象的信息
			property：要将关联查询的用户信息映射到orders中的哪个属性这是位置准备订单的
			select:指定延迟加载需要执行的statement的id（根据用户user_id查询用户信息的statement）
					我们要使用UserMapper.xml中的findUserById来完成根据用户的id（user_id）查询用户信息
					如果findUserById不在本mapper中，需要加namespace
			column:订单信息中关联用户信息查询的列，是user_id
			关联查寻的sql可以理解为：
				SELECT orders.*,
						(SELECT username FROM USER WHERE orders.user_id=user.id) username,
						(SELECT sex FROM USER WHERE orders.user_id=user.id) sex
				FROM orders
		-->
		<association property="user" javaType="cn.nuaa.po.User" select="cn.nuaa.testmapper.UserMapper.findUserById" column="user_id">
		</association>
	</resultMap>


	<!-- 查询订单关联查询用户，用户信息需要延迟加载 -->
	<select id="findOrdersUserLazyLoading" resultMap="OrdersUserLazyLoadingResultMap">
		SELECT * FROM orders
	</select>
	
</mapper>
